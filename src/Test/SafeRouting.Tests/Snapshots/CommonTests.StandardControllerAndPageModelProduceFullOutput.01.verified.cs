//HintName: PageRoutes.g.cs
// <auto-generated/>

#nullable enable

namespace Routes
{
  namespace Pages
  {
    /// <summary>
    /// Generates route values for <see cref="global::EditModel"/>.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("SafeRouting.Generator", "1.0.0.0")]
    public static class Products_Edit
    {
      /// <summary>
      /// Generates route values for <see cref="global::EditModel.OnGet(string, global::System.Collections.Generic.Dictionary{string, object})"/>.
      /// </summary>
      public static Support.Pages_Products_Edit.GetRouteValues Get(string name, global::System.Collections.Generic.Dictionary<string, object> bar)
      {
        var routeInfo = new Support.Pages_Products_Edit.GetRouteValues();
        routeInfo.RouteValues["area"] = "";
        routeInfo[routeInfo.Parameters.Name] = name;
        routeInfo[routeInfo.Parameters.Bar] = bar;
        return routeInfo;
      }
    }
  }
  
  namespace Support.Pages_Products_Edit
  {
    /// <summary>
    /// Represents route keys for the properties of <see cref="global::EditModel"/>.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("SafeRouting.Generator", "1.0.0.0")]
    public sealed class PropertyData
    {
      /// <summary>
      /// Route key for the property <see cref="global::EditModel.Title"/>.
      /// </summary>
      public global::SafeRouting.RouteKey<PropertyData, string?> Title { get; } = new global::SafeRouting.RouteKey<PropertyData, string?>("Title");
      
      /// <summary>
      /// Route key for the property <see cref="global::EditModel.Foo"/>.
      /// </summary>
      public global::SafeRouting.RouteKey<PropertyData, global::System.Collections.Generic.Dictionary<string, object>?> Foo { get; } = new global::SafeRouting.RouteKey<PropertyData, global::System.Collections.Generic.Dictionary<string, object>?>("Foo");
    }
    
    /// <summary>
    /// Represents route values for routes to <see cref="global::EditModel.OnGet(string, global::System.Collections.Generic.Dictionary{string, object})"/>.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("SafeRouting.Generator", "1.0.0.0")]
    public sealed class GetRouteValues : global::SafeRouting.IPageRouteValues
    {
      /// <summary>
      /// The name of the page for the route.
      /// </summary>
      public string PageName => "/Products/Edit";
      /// <summary>
      /// The name of the handler for the route.
      /// </summary>
      public string? HandlerName => null;
      /// <summary>
      /// Values for the route.
      /// </summary>
      public global::Microsoft.AspNetCore.Routing.RouteValueDictionary RouteValues { get; } = new global::Microsoft.AspNetCore.Routing.RouteValueDictionary();
      
      /// <summary>
      /// Properties of <see cref="global::EditModel"/> which can be used in the route.
      /// </summary>
      public PropertyData Properties { get; } = new PropertyData();
      /// <summary>
      /// Removes a property value from the route.
      /// </summary>
      /// <typeparam name="T">The type of values applicable to the key.</typeparam>
      /// <param name="key">The key for the route.</param>
      /// <returns><see langword="true"/> if the element is successfully found and removed; otherwise <see langword="false"/>.</returns>
      public bool Remove<T>(global::SafeRouting.RouteKey<PropertyData, T> key) => RouteValues.Remove(key.Name);
      /// <summary>
      /// Sets a property value for the route.
      /// </summary>
      /// <typeparam name="T">The type of values applicable to the key.</typeparam>
      /// <param name="key">The key for the route.</param>
      /// <param name="value">The value for the route.</param>
      public void Set<T>(global::SafeRouting.RouteKey<PropertyData, T> key, T value) => RouteValues[key.Name] = value;
      /// <summary>
      /// Sets a property value for the route.
      /// </summary>
      /// <param name="key">The key for the route.</param>
      public global::System.Collections.Generic.Dictionary<string, object>? this[global::SafeRouting.RouteKey<PropertyData, global::System.Collections.Generic.Dictionary<string, object>?> key] { set => RouteValues[key.Name] = value; }
      /// <summary>
      /// Sets a property value for the route.
      /// </summary>
      /// <param name="key">The key for the route.</param>
      public string? this[global::SafeRouting.RouteKey<PropertyData, string?> key] { set => RouteValues[key.Name] = value; }
      
      /// <summary>
      /// Parameters of <see cref="global::EditModel.OnGet(string, global::System.Collections.Generic.Dictionary{string, object})"/> which can be used in the route.
      /// </summary>
      public Get.ParameterData Parameters { get; } = new Get.ParameterData();
      /// <summary>
      /// Removes a parameter value from the route.
      /// </summary>
      /// <typeparam name="T">The type of values applicable to the key.</typeparam>
      /// <param name="key">The key for the route.</param>
      /// <returns><see langword="true"/> if the element is successfully found and removed; otherwise <see langword="false"/>.</returns>
      public bool Remove<T>(global::SafeRouting.RouteKey<Get.ParameterData, T> key) => RouteValues.Remove(key.Name);
      /// <summary>
      /// Sets a parameter value for the route.
      /// </summary>
      /// <typeparam name="T">The type of values applicable to the key.</typeparam>
      /// <param name="key">The key for the route.</param>
      /// <param name="value">The value for the route.</param>
      public void Set<T>(global::SafeRouting.RouteKey<Get.ParameterData, T> key, T value) => RouteValues[key.Name] = value;
      /// <summary>
      /// Sets a parameter value for the route.
      /// </summary>
      /// <param name="key">The key for the route.</param>
      public global::System.Collections.Generic.Dictionary<string, object> this[global::SafeRouting.RouteKey<Get.ParameterData, global::System.Collections.Generic.Dictionary<string, object>> key] { set => RouteValues[key.Name] = value; }
      /// <summary>
      /// Sets a parameter value for the route.
      /// </summary>
      /// <param name="key">The key for the route.</param>
      public string this[global::SafeRouting.RouteKey<Get.ParameterData, string> key] { set => RouteValues[key.Name] = value; }
    }
    
    namespace Get
    {
      /// <summary>
      /// Represents route keys for parameters to <see cref="global::EditModel.OnGet(string, global::System.Collections.Generic.Dictionary{string, object})"/>.
      /// </summary>
      [global::System.CodeDom.Compiler.GeneratedCode("SafeRouting.Generator", "1.0.0.0")]
      public sealed class ParameterData
      {
        /// <summary>
        /// Route key for the <c>name</c> parameter in <see cref="global::EditModel.OnGet(string, global::System.Collections.Generic.Dictionary{string, object})"/>.
        /// </summary>
        public global::SafeRouting.RouteKey<ParameterData, string> Name { get; } = new global::SafeRouting.RouteKey<ParameterData, string>("name");
        
        /// <summary>
        /// Route key for the <c>bar</c> parameter in <see cref="global::EditModel.OnGet(string, global::System.Collections.Generic.Dictionary{string, object})"/>.
        /// </summary>
        public global::SafeRouting.RouteKey<ParameterData, global::System.Collections.Generic.Dictionary<string, object>> Bar { get; } = new global::SafeRouting.RouteKey<ParameterData, global::System.Collections.Generic.Dictionary<string, object>>("bar");
      }
    }
  }
}
